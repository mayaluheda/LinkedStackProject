#BlueJ class context
comment0.target=ArrayStack
comment0.text=\n\ \ ArrayStack.java\ \ \ \ \ \ \ Java\ Foundations\n\n\ \ Represents\ an\ array\ implementation\ of\ a\ stack.\ The\ bottom\ of\n\ \ the\ stack\ is\ kept\ at\ array\ index\ 0.\n
comment1.params=
comment1.target=ArrayStack()
comment1.text=\n\ Creates\ an\ empty\ stack\ using\ the\ default\ capacity.\n
comment2.params=element
comment2.target=void\ push(java.lang.Object)
comment2.text=\n\ \ Adds\ the\ specified\ element\ to\ the\ top\ of\ this\ stack,\ expanding\n\ \ the\ capacity\ of\ the\ stack\ array\ if\ necessary.\n\ \n\ @param\ element\ the\ new\ element\ to\ be\ added\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\n\ \ Returns\ a\ string\ representation\ of\ this\ stack.\n\ \n\ @return\ the\ contents\ of\ the\ stack\n
comment4.params=
comment4.target=void\ expandCapacity()
comment4.text=\n\ \ Helper\ method.\ \n\ \ Creates\ a\ new\ array\ to\ store\ the\ contents\ of\ this\ stack\ with\n\ \ twice\ the\ capacity\ of\ the\ old\ one.\n
comment5.params=
comment5.target=java.lang.Object\ pop()
comment5.text=\n\ \ \ \ Removes\ the\ element\ at\ the\ top\ of\ this\ stack\ and\ returns\ a\n\ \ reference\ to\ it.\ Throws\ an\ EmptyCollectionException\ if\ the\n\ \ stack\ contains\ no\ elements.\n\ \n\ @return\ the\ element\ at\ the\ top\ of\ the\ stack\n
comment6.params=
comment6.target=java.lang.Object\ peek()
comment6.text=\n\ \ Returns\ top\ without\ retrieving\n\ \n\ @return\ the\ element\ at\ the\ top\ of\ the\ stack\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\n\ \ Checks\ if\ stack\ is\ empty\n\ \n\ @return\ a\ flag\ indicating\ if\ the\ stack\ is\ empty\n
comment8.params=
comment8.target=int\ size()
comment8.text=\n\ \ Returns\ the\ number\ of\ eleements\ in\ the\ stack\n\ \n\ @return\ the\ size\ of\ the\ stack\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\n\ Trivial\ testing\ \n
numComments=10
