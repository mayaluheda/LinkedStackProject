#BlueJ class context
comment0.target=LinkedStack
comment0.text=\n\ \ LinkedStack.java\ \ \ \ \ \ \ Java\ Foundations\n\n\ \ Represents\ a\ linked\ implementation\ of\ a\ stack.\n\ \ \n\ \ @author\ Maya\ Lu-Heda\n\ \ @version\ 10-29-22\n
comment1.params=
comment1.target=LinkedStack()
comment1.text=\n\ \ Creates\ an\ empty\ stack\ using\ the\ default\ capacity.\n
comment2.params=
comment2.target=java.lang.Object\ pop()
comment2.text=\n\ \ Removes\ the\ element\ at\ the\ top\ of\ this\ stack\ and\ returns\ a\n\ \ reference\ to\ it.\ Throws\ an\ EmptyCollectionException\ if\ the\n\ \ stack\ contains\ no\ elements.\n\ \n\ @return\ the\ element\ at\ the\ top\ of\ the\ stack\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\n\ \ Returns\ a\ string\ representation\ of\ this\ stack.\n\ \n\ @return\ the\ elements\ in\ the\ stack\n
comment4.params=element
comment4.target=void\ push(java.lang.Object)
comment4.text=\n\ adds\ a\ new\ item\ to\ the\ top\ of\ the\ stack\n
comment5.params=
comment5.target=java.lang.Object\ peek()
comment5.text=\n\ Retrieves\ the\ item\ that\ was\ added\ most\ recently\ \n\ @\ returns\ the\ top\ element\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Determines\ whether\ empty\ or\ not\n\ @\ return\ T/F\ on\ whether\ empty\n
comment7.params=
comment7.target=int\ size()
comment7.text=\ \n\ Calculates\ how\ many\ items\ are\ in\ the\ stack\n\ @\ return\ number\ items\ in\ stack\n
numComments=8
